{"version":3,"file":"commonHelpers.js","sources":["../src/js/helpers/helpers.js","../src/js/1-timer.js"],"sourcesContent":["function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(v) {\n  return String(v).padStart(2, '0');\n}\nexport { convertMs, addLeadingZero };\n","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { convertMs, addLeadingZero } from './helpers/helpers';\n\nconst refs = {\n  button: document.querySelector('button'),\n  selector: document.querySelector('#datetime-picker'),\n  timerValues: document.querySelectorAll('.value'),\n};\n\nrefs.button.disabled = true;\nlet intervalId = null;\nlet inputDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    inputDate = selectedDates[0].getTime();\n\n    if (inputDate <= Date.now()) {\n      iziToast.warning({\n        message: 'Please choose a date in the future',\n        backgroundColor: 'red',\n        position: 'topRight',\n      });\n    } else {\n      refs.button.disabled = false;\n    }\n  },\n};\nconst onBtnClick = e => {\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    let dateDiference = inputDate - currentTime;\n    let dates = convertMs(dateDiference);\n    for (let i = 0; i < refs.timerValues.length; i++) {\n      refs.timerValues[i].textContent = addLeadingZero(\n        Object.entries(dates)[i][1]\n      );\n    }\n    if (dateDiference < 1000) {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n  refs.button.disabled = true;\n  refs.selector.disabled = true;\n};\nflatpickr(refs.selector, options);\nrefs.button.addEventListener('click', onBtnClick);\n"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","v","refs","intervalId","inputDate","options","selectedDates","iziToast","onBtnClick","currentTime","dateDiference","dates","i","flatpickr"],"mappings":"2FAAA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASC,EAAeC,EAAG,CACzB,OAAO,OAAOA,CAAC,EAAE,SAAS,EAAG,GAAG,CAClC,CCdA,MAAMC,EAAO,CACX,OAAQ,SAAS,cAAc,QAAQ,EACvC,SAAU,SAAS,cAAc,kBAAkB,EACnD,YAAa,SAAS,iBAAiB,QAAQ,CACjD,EAEAA,EAAK,OAAO,SAAW,GACvB,IAAIC,EAAa,KACbC,EAAY,EAEhB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAYE,EAAc,CAAC,EAAE,QAAO,EAEhCF,GAAa,KAAK,MACpBG,EAAS,QAAQ,CACf,QAAS,qCACT,gBAAiB,MACjB,SAAU,UAClB,CAAO,EAEDL,EAAK,OAAO,SAAW,EAE1B,CACH,EACMM,EAAa,GAAK,CACtBL,EAAa,YAAY,IAAM,CAC7B,MAAMM,EAAc,KAAK,MACzB,IAAIC,EAAgBN,EAAYK,EAC5BE,EAAQjB,EAAUgB,CAAa,EACnC,QAASE,EAAI,EAAGA,EAAIV,EAAK,YAAY,OAAQU,IAC3CV,EAAK,YAAYU,CAAC,EAAE,YAAcZ,EAChC,OAAO,QAAQW,CAAK,EAAEC,CAAC,EAAE,CAAC,CAClC,EAEQF,EAAgB,KAClB,cAAcP,CAAU,CAE3B,EAAE,GAAI,EACPD,EAAK,OAAO,SAAW,GACvBA,EAAK,SAAS,SAAW,EAC3B,EACAW,EAAUX,EAAK,SAAUG,CAAO,EAChCH,EAAK,OAAO,iBAAiB,QAASM,CAAU"}